<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qx.cases.mapper.CaseCheckItemMapper">
    
    <resultMap type="CaseCheckItem" id="CaseCheckItemResult">
        <result property="itemId"    column="item_id"    />
        <result property="itemName"    column="item_name"    />
        <result property="pid"    column="pid"    />
        <result property="category"    column="category"    />
        <result property="records"    column="records"    />
        <result property="significance"    column="significance"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectCaseCheckItemVo">
        select item_id, item_name, pid, category, create_by, create_time, update_by, update_time from case_check_item
    </sql>

    <select id="selectCaseCheckItemList" parameterType="CaseCheckItem" resultMap="CaseCheckItemResult">
        <include refid="selectCaseCheckItemVo"/>
        <where>  
            <if test="itemName != null  and itemName != ''"> and item_name like concat('%', #{itemName}, '%')</if>
            <if test="pid != null "> and pid = #{pid}</if>
            <if test="category != null  and category != ''"> and category = #{category}</if>

        </where>
        order by category,item_id
    </select>
    
    <select id="selectCaseCheckItemById" parameterType="Long" resultMap="CaseCheckItemResult">
        <include refid="selectCaseCheckItemVo"/>
        where item_id = #{itemId}
    </select>

    <select id="selectCaseCheckItemByIds" parameterType="Long" resultMap="CaseCheckItemResult">
        <include refid="selectCaseCheckItemVo"/>
        where item_id in
        <foreach item="itemId" collection="array" open="(" separator="," close=")">
        #{itemId}
    </foreach>
    </select>

    <select id="hasChildByItemId" resultType="Integer">
        select count(1) from case_check_item where pid = #{id}
    </select>
    <insert id="insertCaseCheckItem" parameterType="CaseCheckItem" useGeneratedKeys="true" keyProperty="itemId">
        insert into case_check_item
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="itemName != null  and itemName != ''">item_name,</if>
            <if test="pid != null ">pid,</if>
            <if test="category != null  and category != ''">category,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="itemName != null  and itemName != ''">#{itemName},</if>
            <if test="pid != null ">#{pid},</if>
            <if test="category != null  and category != ''">#{category},</if>

            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateCaseCheckItem" parameterType="CaseCheckItem">
        update case_check_item
        <trim prefix="SET" suffixOverrides=",">
            <if test="itemName != null  and itemName != ''">item_name = #{itemName},</if>
            <if test="pid != null ">pid = #{pid},</if>
            <if test="category != null  and category != ''">category = #{category},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
        </trim>
        where item_id = #{itemId}
    </update>

    <delete id="deleteCaseCheckItemById" parameterType="Long">
        delete from case_check_item where item_id = #{itemId}
    </delete>

    <delete id="deleteCaseCheckItemByIds" parameterType="String">
        delete from case_check_item where item_id in 
        <foreach item="itemId" collection="array" open="(" separator="," close=")">
            #{itemId}
        </foreach>
    </delete>
    
</mapper>